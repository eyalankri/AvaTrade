// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewsApi.Persistence;

#nullable disable

namespace NewsApi.Migrations
{
    [DbContext(typeof(NewsDbContext))]
    [Migration("20250625165053_ChangePublishedAtToDateTime")]
    partial class ChangePublishedAtToDateTime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.17");

            modelBuilder.Entity("News.Contracts.Entities.NewsItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ArticleUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("PublisherName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PublisherUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("RawJson")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sentiment")
                        .HasColumnType("TEXT");

                    b.Property<string>("SentimentReasoning")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ticker")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Description");

                    b.HasIndex("ExternalId")
                        .IsUnique();

                    b.HasIndex("PublishedAt");

                    b.HasIndex("Ticker");

                    b.HasIndex("Title");

                    b.ToTable("News");
                });
#pragma warning restore 612, 618
        }
    }
}
